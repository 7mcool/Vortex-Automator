name: Vortex Automator CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * *' # Exécution quotidienne à minuit

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with pylint
        run: |
          pip install pylint
          pylint --disable=all --enable=syntax,import-error src/

      - name: Verify module imports
        run: |
          python -c "from src.main import main; print('✅ Import successful')"
          python -c "from src.youtube.auth import get_youtube_service; print('✅ YouTube auth import successful')"
          python -c "from src.ai.whisper import load_whisper_model; print('✅ Whisper import successful')"

      - name: Run basic functionality checks
        run: |
          python -c "from src.utils.config import CONFIG; print(f'CONFIG loaded: {len(CONFIG)} items')"
          python -c "from src.utils.file_utils import get_video_duration; print('✅ File utils import successful')"

      - name: Check for large files
        run: |
          ! find . -size +50M

  documentation-check:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check documentation files
        run: |
          echo "📄 Documentation files check:"
          ls docs/ | grep -E 'SETUP|CONFIGURATION|TROUBLESHOOTING' || exit 1
          echo "✅ All documentation files present"

      - name: Validate README
        run: |
          if [ ! -f "README.md" ]; then
            echo "❌ README.md missing!"
            exit 1
          fi
          echo "✅ README.md present"

  release-prepare:
    runs-on: ubuntu-latest
    needs: [build-and-test, documentation-check]
    if: github.event_name == 'push' && contains(github.ref, 'main')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create release package
        run: |
          mkdir vortex-automator-${{ github.sha }}
          cp -r src docs scripts LICENSE requirements.txt README.md vortex-automator-${{ github.sha }}/
          zip -r vortex-automator-${{ github.sha }}.zip vortex-automator-${{ github.sha }}
          echo "RELEASE_PACKAGE=vortex-automator-${{ github.sha }}.zip" >> $GITHUB_ENV

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: vortex-automator-package
          path: ${{ env.RELEASE_PACKAGE }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Vortex Automator v${{ github.run_number }}
          body: |
            Automated release of Vortex Automator
            - Includes all source code
            - Documentation
            - Installation scripts
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.RELEASE_PACKAGE }}
          asset_name: vortex-automator.zip
          asset_content_type: application/zip
